"use strict";(self.webpackChunkknowledge_bank=self.webpackChunkknowledge_bank||[]).push([[9330],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Map-set",sidebar_position:6},s=void 0,i={unversionedId:"frontend/js/other/map-set",id:"frontend/js/other/map-set",title:"Map-set",description:"Set",source:"@site/docs/3 - frontend/3 - js/6-other/6-map-set.md",sourceDirName:"3 - frontend/3 - js/6-other",slug:"/frontend/js/other/map-set",permalink:"/knowledge-bank/docs/frontend/js/other/map-set",draft:!1,editUrl:"https://github.com/EvgenyLeukhin/knowledge-bank/edit/main/docs/3 - frontend/3 - js/6-other/6-map-set.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Map-set",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Import-export",permalink:"/knowledge-bank/docs/frontend/js/other/import-export"},next:{title:"Storage",permalink:"/knowledge-bank/docs/frontend/js/other/storage"}},c={},l=[{value:"Set",id:"set",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"set"},"Set"),(0,o.kt)("p",null,"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0442\u0440\u043e\u043a \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// \u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0434\u0430\u0442 \u0434\u043b\u044f \u0434\u0438\u0437\u0435\u0439\u0431\u043b\u0430 \u0432 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435\nconst existingChangesDatesSet = useMemo(() => {\n  const set = new Set<string>();\n  workdayChanges?.forEach(item => {\n    if (item?.date) set.add(item.date);\n  });\n  return set;\n}, [workdayChanges]);\n\nconst selectedNewDatesSet = useMemo(() => {\n  const set = new Set<string>();\n  addDaysValues?.forEach(item => {\n    if (item?.date) set.add(item.date);\n  });\n  return set;\n}, [addDaysValues]);\n\n// \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432 \u044d\u0442\u0438\u0445 \u0441\u043f\u0438\u0441\u043a\u0430\u0445\nconst dateStr = day?.format(FORMAT_TYPE2);\n\nconst isExist =\n  existingChangesDatesSet.has(dateStr) || selectedNewDatesSet.has(dateStr);\n")))}d.isMDXComponent=!0}}]);