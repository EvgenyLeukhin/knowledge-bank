"use strict";(self.webpackChunkknowledge_bank=self.webpackChunkknowledge_bank||[]).push([[3115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),f=o,b=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return n?r.createElement(b,i(i({ref:t},l),{},{components:n})):r.createElement(b,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9893:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={title:"\u041e\u0431\u044a\u0435\u043a\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",sidebar_position:10},i=void 0,c={unversionedId:"frontend/react/data/object",id:"frontend/react/data/object",title:"\u041e\u0431\u044a\u0435\u043a\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",description:"",source:"@site/docs/frontend/react/7-data/9-object.md",sourceDirName:"frontend/react/7-data",slug:"/frontend/react/data/object",permalink:"/knowledge-bank/docs/frontend/react/data/object",draft:!1,editUrl:"https://github.com/EvgenyLeukhin/knowledge-bank/edit/main/docs/frontend/react/7-data/9-object.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"\u041e\u0431\u044a\u0435\u043a\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"sort()",permalink:"/knowledge-bank/docs/frontend/react/data/sort"},next:{title:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 (-)",permalink:"/knowledge-bank/docs/frontend/react/data/data"}},s={},d=[],l={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ColorList } from 'interfaces/colors';\n\ntype TDirection = 'left' | 'up' | 'right' | 'down';\n\ntype TProps = {\n  stroke?: string;\n  direction?: TDirection;\n};\n\nconst Arrow = ({\n  // \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0435\n  stroke = ColorList.FONT_SECONDARY,\n  direction = 'down',\n}: TProps) => {\n// \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439\n  const directions: Record<TDirection, number> = {\n    left: 90,\n    up: 180,\n    right: 270,\n    down: 0,\n  };\n\n  const selectedDirection = directions[direction];\n\n  return (\n    <svg\n      style={{ transform: `rotate(${selectedDirection}deg)` }}\n      width='14'\n      height='8'\n      viewBox='0 0 14 8'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path\n        d='M1 1L7 7L13 1'\n        stroke={stroke}\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      />\n    </svg>\n  );\n};\n\nexport default Arrow;\n")))}p.isMDXComponent=!0}}]);