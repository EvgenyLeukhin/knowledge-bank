"use strict";(self.webpackChunkknowledge_bank=self.webpackChunkknowledge_bank||[]).push([[2315],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),y=a,f=d["".concat(i,".").concat(y)]||d[y]||u[y]||s;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7860:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={title:"Thunks \u2713",sidebar_position:3},o=void 0,c={unversionedId:"frontend/react/redux/actions",id:"frontend/react/redux/actions",title:"Thunks \u2713",description:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d",source:"@site/docs/frontend/react/4-redux/3-actions.md",sourceDirName:"frontend/react/4-redux",slug:"/frontend/react/redux/actions",permalink:"/knowledge-bank/docs/frontend/react/redux/actions",draft:!1,editUrl:"https://github.com/EvgenyLeukhin/knowledge-bank/edit/main/docs/frontend/react/4-redux/3-actions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Thunks \u2713",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u0421\u043b\u0430\u0439\u0441\u044b \u2713",permalink:"/knowledge-bank/docs/frontend/react/redux/slices"},next:{title:"\u041f\u043e\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u2713",permalink:"/knowledge-bank/docs/frontend/react/redux/usage"}},i={},l=[{value:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d",id:"\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439-\u044d\u043a\u0448\u0435\u043d",level:2},{value:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440 thunk",id:"\u043f\u0440\u0438\u043c\u0435\u0440-thunk",level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u044d\u043a\u0448\u0435\u043d\u043e\u0432",id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b-\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445-\u044d\u043a\u0448\u0435\u043d\u043e\u0432",level:2},{value:"\u0423\u0442\u0438\u043b\u0438\u0442\u044b",id:"\u0443\u0442\u0438\u043b\u0438\u0442\u044b",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439-\u044d\u043a\u0448\u0435\u043d"},"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d"),(0,a.kt)("p",null,"Thunk. Effect. \u0412 \u043d\u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442\u044b \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043e\u0431\u043e\u0433\u0430\u0449\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import axios from 'axios';\nimport { TUser } from './users.types';\nimport { Dispatch } from '@reduxjs/toolkit';\nimport { usersSlice } from './users.slice';\n\nconst { usersLoading, usersSuccess, usersError, resetUsersState } =\n  usersSlice.actions;\n\nexport const fetchUsersThunk = (limit: number) => async (dispatch: Dispatch) => {\n  dispatch(resetUsersState());\n  dispatch(usersLoading(true));\n\n  try {\n    // response typing\n    const response = await axios.get<TUser[]>(\n      `https://jsonplaceholder.typicode.com/users?limit=${limit}`,\n    );\n\n    // if success\n    setTimeout(() => {\n      dispatch(usersLoading(false));\n      dispatch(usersSuccess(response.data));\n    }, 1000);\n\n    // if error\n  } catch (e) {\n    dispatch(usersLoading(false));\n    dispatch(usersError(`${e}`));\n  }\n};\n\n// \u0438\u043b\u0438 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043e\u043c \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435\nexport const usersThunks = {\n  fetchUsersThunk,\n};\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"},"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsersThunk } from '@store/users';\n\nconst SomeComp = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state: AppState) => state.users);\n\n  useEffect(() => {\n    dispatch(fetchUsersThunk(10));\n  }, []);\n\n  const { isFetching, error, userList } = users;\n\n  // render users\n  ...\n};\n\nexport default SomeComp;\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u043c\u0435\u0440-thunk"},"\u041f\u0440\u0438\u043c\u0435\u0440 thunk"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Dispatch } from 'redux';\nimport { store } from '../store/store';\nimport routesService from '../api/services/routes-service';\nimport { setLoadingAction } from '../slices/orders';\n\nexport const attachReturnsToPickups = (routeIds: number[]) => {\n    return async function (dispatch: Dispatch<any>) {\n        dispatch(setLoadingAction(true));\n\n        const data = await routesService.attachReturnsToPickups(routeIds);\n        if (data) {\n            // \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0442\u043e\u0440\u0443\n            const filters = store.getState().orders.filters;\n            store.dispatch(getAllRoutes());\n            store.dispatch(getAllOrders());\n            dispatch(messageAction(messageHandler('\u041f\u0430\u0440\u0442\u043d\u0451\u0440\u0441\u043a\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b', MessageType.SUCCESS)));\n        } else {\n            dispatch(setLoadingAction(false));\n            dispatch(messageAction(messageHandler('\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0441\u043a\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u044b')));\n        }\n    };\n};\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b-\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445-\u044d\u043a\u0448\u0435\u043d\u043e\u0432"},"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u044d\u043a\u0448\u0435\u043d\u043e\u0432"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\nsetDrugstoreTypeFilter(state, { payload }: PayloadAction<DrugstoreType>) {\n  const { drugstoreType } = state.filter;\n\n  const isInclude = drugstoreType.includes(payload);\n\n  if (isInclude) {\n    state.filter.drugstoreType = drugstoreType.filter(\n      type => type !== payload,\n    );\n  } else {\n    state.filter.drugstoreType = [...drugstoreType, payload];\n  }\n},\n\n// \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0435\u0441\u043b\u0438 payload \u0442\u043e\u0436\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\nsetOwnDrugstoreTypeFilter(state, { payload }: PayloadAction<PickUpType[]>) {\n  const { ownDrugstoreType } = state.filter;\n\n  payload.map(type => {\n    const isExist = ownDrugstoreType.some(\n      currentType => currentType === type,\n    );\n\n    if (isExist) {\n      // \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\n      const index = ownDrugstoreType.indexOf(type);\n      ownDrugstoreType.splice(index, 1);\n    } else {\n      // \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\n      ownDrugstoreType.push(type);\n    }\n  });\n},\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u0443\u0442\u0438\u043b\u0438\u0442\u044b"},"\u0423\u0442\u0438\u043b\u0438\u0442\u044b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { PayloadAction } from '@reduxjs/toolkit';\nexport type ObjectType = Record<string, unknown>;\n\n// simpleMerge\nexport const simpleMerge = <State, Payload>(state: State, action: PayloadAction<Payload>): State => ({\n  ...state,\n  ...action.payload,\n});\n\n// simpleMergeThunk\nexport const simpleMergeThunk = <State, Payload>() => (state: State, action: PayloadAction<Payload>): State => ({\n  ...state,\n  ...action.payload,\n});\n\n// createPayload\nexport const createPayload = <Payload extends ObjectType>(payload: Payload) => ({\n  payload: payload,\n});\n\n// createSimpleReducer\nexport const createSimpleReducer = <State, K extends keyof State>(key: K) => (\n  state: State,\n  action: PayloadAction<State[K]>\n) => ({\n  ...state,\n  [key]: action.payload,\n});\n\n// createSimpleDraftReducer\nexport const createSimpleDraftReducer = <State, K extends keyof State>(key: K) => (\n  state: State,\n  action: PayloadAction<State[K]>\n) => {\n  state[key] = action.payload;\n};\n\n// createMergeReducer\nexport const createMergeReducer = <State>() => simpleMergeThunk<State, Partial<State>>();\n\n// createMergeDraftReducer\nexport const createMergeDraftReducer = <State, K extends keyof State>(key: K) => (\n  state: State,\n  action: PayloadAction<State[K]>\n) => {\n  state[key] = {\n    ...state[key],\n    ...action.payload,\n  };\n};\n``\n")))}u.isMDXComponent=!0}}]);