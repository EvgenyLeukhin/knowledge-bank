"use strict";(self.webpackChunkknowledge_bank=self.webpackChunkknowledge_bank||[]).push([[4792],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={title:"\u041f\u043e\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u2713",sidebar_position:4},s=void 0,c={unversionedId:"frontend/react/redux/usage",id:"frontend/react/redux/usage",title:"\u041f\u043e\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u2713",description:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",source:"@site/docs/frontend/react/4-redux/4-usage.md",sourceDirName:"frontend/react/4-redux",slug:"/frontend/react/redux/usage",permalink:"/knowledge-bank/docs/frontend/react/redux/usage",draft:!1,editUrl:"https://github.com/EvgenyLeukhin/knowledge-bank/edit/main/docs/frontend/react/4-redux/4-usage.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u041f\u043e\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u2713",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Thunks \u2713",permalink:"/knowledge-bank/docs/frontend/react/redux/actions"},next:{title:"fetch()",permalink:"/knowledge-bank/docs/frontend/react/api/fetch"}},l={},i=[{value:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",level:2},{value:"\u0425\u0443\u043a\u0438 \u0434\u043b\u044f redux",id:"\u0445\u0443\u043a\u0438-\u0434\u043b\u044f-redux",level:2},{value:"\u0418\u043c\u043f\u043e\u0440\u0442 \u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u044b",id:"\u0438\u043c\u043f\u043e\u0440\u0442-\u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u044b",level:2}],u={toc:i};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"},"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useSyncActions, useAppSelector } from '@/store';\n\n...\n// get state from store by useAppSelector\nconst {\n  counterStore: { counter },\n  usersStore: { users, isLoading, isError, errorMessage },\n} = useAppSelector(state => state);\n\n// get actions\nconst {\n  changeCounter,\n  clearCounter,\n  dicrementCounter,\n  incrementCounter,\n  addRandomUser2,\n  clearUsers,\n  deleteUser,\n  deleteLastUser,\n  fetchUsersThunk,\n} = useSyncActions();\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"\u0445\u0443\u043a\u0438-\u0434\u043b\u044f-redux"},"\u0425\u0443\u043a\u0438 \u0434\u043b\u044f redux"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useSelector, useDispatch } from 'react-redux';\n\n// \u0438\u043c\u043f\u043e\u0440\u0442 \u044d\u043a\u0448\u0435\u043d\u0430 \u0438\u0437 redux\nimport { fetchProducts } from 'redux/productsSlice';\n\n...\n\n// I \u0432\u0430\u0440\u0438\u0430\u043d\u0442 - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 state\nconst users = useSelector(store => store.usersSlice);\nconst products = useSelector(store => store.productsSlice);\nconst calculated = useSelector(store => store.productsSlice.data.map(product => product.id));\n\n\n// II \u0432\u0430\u0440\u0438\u0430\u043d\u0442 - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 c\u043e state-\u043f\u043e\u043b\u044f\u043c\u0438\nconst { users, products, calculated } = useSelector((store: TStore) => ({\n  users: store.usersSlice.data,\n  products: store.productsSlice.data,\n\n  // \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 store\n  calculated: store.productsSlice.data.map(product => product.id),\n}));\n\n// \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0441\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0438\u043a\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 useSelector\nconst { hubs } = useSelector((state: TStore) => ({\n    hubs: state.hubs.hubs.filter(hub => { \n        return state.auth.hubIds?.includes(hub.id) && (!!hub.timezone && !!hub.timeFrom && !!hub.timeTo);\n    })\n    .map(({ name, id, code }) => ({\n        name: code ? `${name} (${code})` : name,\n        value: id,\n    })).sort((a, b) => a.name.localeCompare(b.name))\n}));\n\n...\n\nconst dispatch = useDispatch();\n\n...\n\n// \u0432\u0441\u0435 \u044d\u043a\u0448\u0435\u043d\u044b \u0438\u0437 redux, \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0431\u0430\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c\u0441\u044f dispatch.\nuseEffect(() => {\n  dispatch(fetchProducts(data));\n}, []);\n\n\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"\u0438\u043c\u043f\u043e\u0440\u0442-\u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u044b"},"\u0418\u043c\u043f\u043e\u0440\u0442 \u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u044b"),(0,o.kt)("p",null,"\u041c\u043e\u0436\u043d\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435 \u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u044b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { RootState } from '..';\nimport { INotificationTemplate, INotificationTemplatesState } from './types';\n\n// full state\nexport const selectNotificationTemplatesState = (globalState: RootState): INotificationTemplatesState =>\n  globalState.notificationTemplates;\n\n// templates\nexport const selectNotificationTemplates = (globalState: RootState): INotificationTemplate[] =>\n  globalState.notificationTemplates.templates;\n\n// selectedTemplate\nexport const selectSelectedNotificationTemplate = (globalState: RootState): INotificationTemplate | null =>\n  globalState.notificationTemplates.selectedTemplate;\n")))}d.isMDXComponent=!0}}]);