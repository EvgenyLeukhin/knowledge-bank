"use strict";(self.webpackChunkknowledge_bank=self.webpackChunkknowledge_bank||[]).push([[2984],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),h=a,y=u["".concat(l,".").concat(h)]||u[h]||p[h]||s;return t?r.createElement(y,o(o({ref:n},d),{},{components:t})):r.createElement(y,o({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9607:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const s={title:"Thunks",sidebar_position:3},o=void 0,i={unversionedId:"frontend/react/archive/redux/thunks",id:"frontend/react/archive/redux/thunks",title:"Thunks",description:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d",source:"@site/docs/frontend/5 - react/88-archive/2-redux/3-thunks.md",sourceDirName:"frontend/5 - react/88-archive/2-redux",slug:"/frontend/react/archive/redux/thunks",permalink:"/knowledge-bank/docs/frontend/react/archive/redux/thunks",draft:!1,editUrl:"https://github.com/EvgenyLeukhin/knowledge-bank/edit/main/docs/frontend/5 - react/88-archive/2-redux/3-thunks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Thunks",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u0421\u043b\u0430\u0439\u0441\u044b",permalink:"/knowledge-bank/docs/frontend/react/archive/redux/slices"},next:{title:"\u041f\u043e\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",permalink:"/knowledge-bank/docs/frontend/react/archive/redux/usage"}},l={},c=[{value:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d",id:"\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439-\u044d\u043a\u0448\u0435\u043d",level:2},{value:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435",level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440 thunk",id:"\u043f\u0440\u0438\u043c\u0435\u0440-thunk",level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u044d\u043a\u0448\u0435\u043d\u043e\u0432",id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b-\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445-\u044d\u043a\u0448\u0435\u043d\u043e\u0432",level:2},{value:"\u0423\u0442\u0438\u043b\u0438\u0442\u044b",id:"\u0443\u0442\u0438\u043b\u0438\u0442\u044b",level:2},{value:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch",id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch",level:2},{value:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch 2",id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch-2",level:2},{value:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch 3",id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch-3",level:2}],d={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439-\u044d\u043a\u0448\u0435\u043d"},"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u044d\u043a\u0448\u0435\u043d"),(0,a.kt)("p",null,"Thunk. Effect. \u0412 \u043d\u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442\u044b \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043e\u0431\u043e\u0433\u0430\u0449\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438."),(0,a.kt)("p",null,"dispatch indise component --\x3e thunk --\x3e get API data --\x3e modified data --\x3e save data to store"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import axios from 'axios';\nimport { TUser } from './users.types';\nimport { Dispatch } from '@reduxjs/toolkit';\nimport { usersSlice } from './users.slice';\n\nconst { usersLoading, usersSuccess, usersError, resetUsersState } =\n  usersSlice.actions;\n\nexport const fetchUsersThunk =\n  (limit: number) => async (dispatch: Dispatch) => {\n    dispatch(resetUsersState());\n    dispatch(usersLoading(true));\n\n    try {\n      // response typing\n      const response = await axios.get<TUser[]>(\n        `https://jsonplaceholder.typicode.com/users?limit=${limit}`,\n      );\n\n      // if success\n      setTimeout(() => {\n        dispatch(usersLoading(false));\n        dispatch(usersSuccess(response.data));\n      }, 1000);\n\n      // if error\n    } catch (e) {\n      dispatch(usersLoading(false));\n      dispatch(usersError(`${e}`));\n    }\n  };\n\n// \u0438\u043b\u0438 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043e\u043c \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435\nexport const usersThunks = {\n  fetchUsersThunk,\n};\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435-\u0432-\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"},"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0435"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsersThunk } from '@store/users';\n\nconst SomeComp = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state: AppState) => state.users);\n\n  useEffect(() => {\n    dispatch(fetchUsersThunk(10));\n  }, []);\n\n  const { isFetching, error, userList } = users;\n\n  // render users\n  ...\n};\n\nexport default SomeComp;\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u043c\u0435\u0440-thunk"},"\u041f\u0440\u0438\u043c\u0435\u0440 thunk"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Dispatch } from 'redux';\nimport { store } from '../store/store';\nimport routesService from '../api/services/routes-service';\nimport { setLoadingAction } from '../slices/orders';\n\nexport const attachReturnsToPickups = (routeIds: number[]) => {\n  return async function (dispatch: Dispatch<any>) {\n    dispatch(setLoadingAction(true));\n\n    const data = await routesService.attachReturnsToPickups(routeIds);\n    if (data) {\n      // \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0442\u043e\u0440\u0443\n      const filters = store.getState().orders.filters;\n      store.dispatch(getAllRoutes());\n      store.dispatch(getAllOrders());\n      dispatch(\n        messageAction(\n          messageHandler(\n            '\u041f\u0430\u0440\u0442\u043d\u0451\u0440\u0441\u043a\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b',\n            MessageType.SUCCESS,\n          ),\n        ),\n      );\n    } else {\n      dispatch(setLoadingAction(false));\n      dispatch(\n        messageAction(\n          messageHandler('\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0441\u043a\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u044b'),\n        ),\n      );\n    }\n  };\n};\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b-\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445-\u044d\u043a\u0448\u0435\u043d\u043e\u0432"},"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u044d\u043a\u0448\u0435\u043d\u043e\u0432"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\nsetDrugstoreTypeFilter(state, { payload }: PayloadAction<DrugstoreType>) {\n  const { drugstoreType } = state.filter;\n\n  const isInclude = drugstoreType.includes(payload);\n\n  if (isInclude) {\n    state.filter.drugstoreType = drugstoreType.filter(\n      type => type !== payload,\n    );\n  } else {\n    state.filter.drugstoreType = [...drugstoreType, payload];\n  }\n},\n\n// \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0435\u0441\u043b\u0438 payload \u0442\u043e\u0436\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\nsetOwnDrugstoreTypeFilter(state, { payload }: PayloadAction<PickUpType[]>) {\n  const { ownDrugstoreType } = state.filter;\n\n  payload.map(type => {\n    const isExist = ownDrugstoreType.some(\n      currentType => currentType === type,\n    );\n\n    if (isExist) {\n      // \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\n      const index = ownDrugstoreType.indexOf(type);\n      ownDrugstoreType.splice(index, 1);\n    } else {\n      // \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\n      ownDrugstoreType.push(type);\n    }\n  });\n},\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u0443\u0442\u0438\u043b\u0438\u0442\u044b"},"\u0423\u0442\u0438\u043b\u0438\u0442\u044b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { PayloadAction } from '@reduxjs/toolkit';\nexport type ObjectType = Record<string, unknown>;\n\n// simpleMerge\nexport const simpleMerge = <State, Payload>(\n  state: State,\n  action: PayloadAction<Payload>,\n): State => ({\n  ...state,\n  ...action.payload,\n});\n\n// simpleMergeThunk\nexport const simpleMergeThunk =\n  <State, Payload>() =>\n  (state: State, action: PayloadAction<Payload>): State => ({\n    ...state,\n    ...action.payload,\n  });\n\n// createPayload\nexport const createPayload = <Payload extends ObjectType>(\n  payload: Payload,\n) => ({\n  payload: payload,\n});\n\n// createSimpleReducer\nexport const createSimpleReducer =\n  <State, K extends keyof State>(key: K) =>\n  (state: State, action: PayloadAction<State[K]>) => ({\n    ...state,\n    [key]: action.payload,\n  });\n\n// createSimpleDraftReducer\nexport const createSimpleDraftReducer =\n  <State, K extends keyof State>(key: K) =>\n  (state: State, action: PayloadAction<State[K]>) => {\n    state[key] = action.payload;\n  };\n\n// createMergeReducer\nexport const createMergeReducer = <State>() =>\n  simpleMergeThunk<State, Partial<State>>();\n\n// createMergeDraftReducer\nexport const createMergeDraftReducer =\n  <State, K extends keyof State>(key: K) =>\n  (state: State, action: PayloadAction<State[K]>) => {\n    state[key] = {\n      ...state[key],\n      ...action.payload,\n    };\n  };\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch"},"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const syncGoTemplatesHandler = async () => {\n  const result = (await dispatch(syncGoTemplates())) as unknown as boolean;\n\n  if (result) {\n    setSuccess('\u0423\u0441\u043f\u0435\u0448\u043d\u043e');\n  } else {\n    setSuccess('\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430');\n  }\n};\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch-2"},"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// thunk, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435\nexport const setSlaInterval = (slaId: number, intervalData: ISlaInterval) => {\n  return async function (dispatch: Dispatch<any>): Promise<FormError[] | ISlaInterval | undefined> {\n    dispatch(setLoadingAction(true));\n    const response = !intervalData.id\n      ? await slaService.createInterval(slaId, intervalData)\n      : await slaService.editInterval(slaId, intervalData);\n    if (response.success) {\n      await dispatch(setLoadingAction(false));\n      return response.data;\n    } else {\n      await dispatch(\n        setMessageAction(messageHandler('\u0412\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b', MessageType.ERROR))\n      );\n      await dispatch(setLoadingAction(false));\n      if (response.errors) {\n        return response.errors;\n      }\n    }\n  };\n};\n\n...\n\n// \u044d\u043a\u0448\u0435\u043d \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\n  const saveInterval = async (\n    slaInWork: ISla,\n    intervalInWork: ISlaInterval,\n    setSlaInWork: (data: ISla) => void,\n    originalSla: ISla,\n    setOriginalSla: (data: ISla) => void\n  ) => {\n    const responseInterval = (await dispatch(setSlaInterval(slaInWork.id, intervalInWork))) as unknown as\n      | FormError[]\n      | ISlaInterval\n      | undefined;\n\n    if (responseInterval) {\n      const data = responseInterval as ISlaInterval;\n\n      if (data.id) {\n        const iId = intervalInWork.id;\n\n        setSlaInWork({\n          ...slaInWork,\n          intervals: slaInWork.intervals.map((interval) => {\n            return interval.uniqId !== intervalInWork.uniqId\n              ? interval\n              : {\n                  ...data,\n                  uniqId: intervalInWork.uniqId,\n                };\n          }),\n        });\n\n        setOriginalSla({\n          ...originalSla,\n          intervals: !iId\n            ? [\n                ...originalSla.intervals,\n                {\n                  ...data,\n                  uniqId: intervalInWork.uniqId,\n                },\n              ]\n            : [\n                ...originalSla.intervals.map((interval) => {\n                  return interval.uniqId !== intervalInWork.uniqId\n                    ? interval\n                    : {\n                        ...data,\n                        uniqId: intervalInWork.uniqId,\n                      };\n                }),\n              ],\n        });\n\n        setErrors([]);\n      }\n\n      if (Array.isArray(responseInterval)) {\n        setErrors(responseInterval);\n      }\n    }\n  };\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043e\u0442\u0432\u0435\u0442\u0430-\u043f\u043e\u0441\u043b\u0435-dispatch-3"},"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 dispatch 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const handleSuspend = async () => {\n  const newErrors = (await dispatch(hubSuspend(time, search))) as unknown as FormError[];\n\n  if (!newErrors) {\n    close();\n  } else {\n    setErrors(newErrors || []);\n  }\n};\n")))}p.isMDXComponent=!0}}]);